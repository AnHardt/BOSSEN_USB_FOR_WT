
//////////////////////////////////// 函数声明 /////////////////////////////////////
uchar* Decomposition(uint data);//将一个四位数的各个位上的数分解出来
uchar* Decomposition8(signed long data);
uint pow10(uchar n);
////////////////////////////////////// END ////////////////////////////////////////

/*******************************************************************************
函数名称： uchar* Decomposition(uint data)
函数功能： 将一个四位数的各个位上的数分解出来
时间	： 2010-2-20
说明    ： 
*******************************************************************************/
uchar* Decomposition(uint data)
{
   uchar a[4];
   uchar c;
   a[3]=data/1000;//保存第四位
   c=data%1000;
   a[2]=c/100;
   c=c%100;
   a[1]=c/10;
   a[0]=c%10;//保存第1位
   return a;
}

/*******************************************************************************
函数名称： uchar* Decomposition8(signed long data)
函数功能： 将一个8位数(10进制)的各个位上的数分解出来
时间	： 2010-2-20
说明    ： 
*******************************************************************************/
uchar* Decomposition8(signed long data)
{
   uchar a[8];
   signed long c;
   if( (data<=99999999)&&(data>=0) )//如果数位超过 8 位，进行保护处理
   {  
      a[7]=data/10000000;
      c=data%10000000l;//得到一个 7 位数
      a[6]=c/1000000;
      c=c%1000000;//得到一个 6 位数
      a[5]=c/100000;
      c=c%100000;//得到一个 5 位数
      a[4]=c/10000;
      c=c%10000;//得到一个 4 位数
      a[3]=c/1000;
      c=c%1000;//得到一个 3 位数
      a[2]=c/100;
      c=c%100;//得到一个 2 位数
      a[1]=c/10;
      c=c%10;//得到一个 1 位数
      a[0]=c;
   }
   return a;
}

/*******************************************************************************
函数名称： uint pow10(uchar n)
函数功能： 计算10的n次方
时间	： 2010-2-20
说明    ： 
*******************************************************************************/
uint pow10(uchar n)
{
   uint pow=1;
   
   while( n!=0 )
   {
      pow=pow*10;
	  n=n-1;
   }
   return pow;
}

